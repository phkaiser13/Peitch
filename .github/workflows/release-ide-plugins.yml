# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Release IDE Plugins

on:
  workflow_dispatch:
    inputs:
      plugin:
        description: 'The plugin to release (e.g., "vscode", "intellij")'
        required: true
        type: choice
        options:
          - vscode
          - intellij
      version:
        description: 'The semantic version to release (e.g., 1.2.3)'
        required: true
        type: string

jobs:
  release-vscode:
    name: Release VS Code Plugin
    if: ${{ github.event.inputs.plugin == 'vscode' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          # We need a token to push the version bump back
          token: ${{ secrets.GH_PAT_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'vscode-peitch/package-lock.json'

      - name: Install dependencies
        working-directory: ./vscode-peitch
        run: npm ci

      - name: Update version
        working-directory: ./vscode-peitch
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Build extension
        working-directory: ./vscode-peitch
        run: npm run build --if-present

      - name: Install vsce for packaging
        run: npm install -g vsce

      - name: Package extension
        working-directory: ./vscode-peitch
        run: vsce package

      - name: Publish to Visual Studio Marketplace
        working-directory: ./vscode-peitch
        run: vsce publish -p ${{ secrets.VS_MARKETPLACE_TOKEN }}

      - name: Commit version bump
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add vscode-peitch/package.json vscode-peitch/package-lock.json
          git commit -m "chore(vscode-plugin): release version ${{ github.event.inputs.version }}"
          git push

  release-intellij:
    name: Release IntelliJ Plugin
    if: ${{ github.event.inputs.plugin == 'intellij' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PAT_TOKEN }}

      - name: Setup Java (JDK 17)
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'gradle'

      - name: Update version in build.gradle.kts
        working-directory: ./intellij-peitch
        run: |
          sed -i -E "s/version = \".*\"/version = \"${{ github.event.inputs.version }}\"/" build.gradle.kts
          echo "--- build.gradle.kts after version update ---"
          cat build.gradle.kts

      - name: Publish to JetBrains Marketplace
        working-directory: ./intellij-peitch
        run: ./gradlew publishPlugin
        env:
          PUBLISH_TOKEN: ${{ secrets.INTELLIJ_MARKETPLACE_TOKEN }}
          CERTIFICATE_CHAIN: ${{ secrets.CERTIFICATE_CHAIN }}
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          PRIVATE_KEY_PASSWORD: ${{ secrets.PRIVATE_KEY_PASSWORD }}

      - name: Commit version bump
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add intellij-peitch/build.gradle.kts
          git commit -m "chore(intellij-plugin): release version ${{ github.event.inputs.version }}"
          git push
