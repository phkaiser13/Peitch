# Copyright (C) 2025 Pedro Henrique / phkaiser13
#
# File: k8s/crd/ph.io_phgitdisasterrecoveries.yaml
#
# This CRD defines the PhgitDisasterRecovery resource, which orchestrates
# automated failover between two Kubernetes clusters.
#
# SPDX-License-Identifier: Apache-2.0
#
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: phgitdisasterrecoveries.ph.io
spec:
  group: ph.io
  scope: Namespaced
  names:
    plural: phgitdisasterrecoveries
    singular: phgitdisasterrecovery
    kind: PhgitDisasterRecovery
    shortNames:
      - phdr
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              required:
                - primaryCluster
                - drCluster
                - targetApplication
                - policy
              properties:
                primaryCluster:
                  type: object
                  description: "Connection details for the primary cluster."
                  properties:
                    kubeconfigSecretRef:
                      type: string
                      description: "Name of the secret containing the kubeconfig for the primary cluster."
                drCluster:
                  type: object
                  description: "Connection details for the disaster recovery cluster."
                  properties:
                    kubeconfigSecretRef:
                      type: string
                      description: "Name of the secret containing the kubeconfig for the DR cluster."
                    replicas:
                      type: integer
                      description: "Number of replicas to scale the deployment to on the DR cluster during failover."
                      default: 3
                targetApplication:
                  type: object
                  description: "The application to monitor and fail over."
                  properties:
                    deploymentName:
                      type: string
                      description: "Name of the deployment to monitor in the primary cluster."
                    namespace:
                      type: string
                      description: "Namespace of the target application."
                policy:
                  type: object
                  description: "Policies for health checking and failover."
                  properties:
                    healthCheck:
                      type: object
                      description: "Policy for monitoring the application's health."
                      properties:
                        prometheusQuery:
                          type: string
                          description: "A PromQL query that should return a single numerical value."
                        successCondition:
                          type: string
                          description: "The condition to evaluate against the query result. Use 'value' as a placeholder. E.g., 'value < 0.5'."
                        interval:
                          type: string
                          description: "How often to run the health check (e.g., '1m')."
                        failureThreshold:
                          type: integer
                          description: "How many consecutive failures trigger a failover."
                    failoverTrigger:
                      type: string
                      enum: ["Automatic", "Manual"]
                      description: "Trigger for failover. 'Automatic' fails over on health check failure. 'Manual' requires an annotation on the resource."
                    notification:
                      type: object
                      description: "Configuration for notifications after a successful failover."
                      properties:
                        webhookUrl:
                          type: string
                          description: "The URL to send a POST request to after a successful failover."
            status:
              type: object
              properties:
                activeCluster:
                  type: string
                  enum: ["Primary", "DR"]
                  description: "Which cluster is currently serving traffic."
                state:
                  type: string
                  enum: ["Monitoring", "Degraded", "FailingOver", "ActiveOnDR", "Failed"]
                  description: "The current state of the DR process."
                lastHealthCheckTime:
                  type: string
                  format: date-time
                  description: "Timestamp of the last successful health check."
                consecutiveFailures:
                  type: integer
                  description: "Number of consecutive health check failures."
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      type:
                        type: string
                      status:
                        type: string
                      lastUpdateTime:
                        type: string
                        format: date-time
                      message:
                        type: string
